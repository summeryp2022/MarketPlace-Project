﻿@model MarketPlace.Models.UserInfoVM

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SignUpPage</title>
</head>
<style>
    body {
        background-image: url('https://s2.loli.net/2022/03/31/3WMq4TukiZOtS2A.png');
        background-color: #cccccc;
    }

    #signup_frame {
        width: 600px;
        height: 500px;
        padding: 13px;
        position: absolute;
        left: 50%;
        top: 50%;
        margin-left: -200px;
        margin-top: -200px;
        background-color: rgba(240, 255, 255, 0.5);
        border-radius: 10px;
        text-align: center;
    }

    form p > * {
        display: inline-block;
        vertical-align: middle;
    }

    #image_logo {
        margin-top: 22px;
    }

    .label_input {
        font-size: 14px;
        width: 120px;
        height: 28px;
        line-height: 28px;
        text-align: center;
        color: white;
        background-color: #3CD8FF;
        border-top-left-radius: 5px;
        border-bottom-left-radius: 5px;
    }

    .text_field {
        width: 278px;
        height: 28px;
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
        border: 0;
    }
</style>

<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm("SignUpPage", "Home", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal" id="signup_frame">
        <h1>Register as User</h1>
        <hr />
        <label for="file">Image preview:</label>
        <br />
        <br />
        <form action="" enctype="">
            <input id="file" class="filepath" onchange="changepic(this)" type="file" /><br />

            <img src="" id="show" width="50" />
        </form>

        <script>
            function changepic() {
                var reads = new FileReader()

                f = document.getElementById('file').files[0]

                reads.readAsDataURL(f)

                reads.onload = function (e) {
                    document.getElementById('show').src = this.result
                }
            }
        </script>
        <br />

        <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sign Up" class="btn btn-default" />
                </div>
            </div>
        </div>
        }

</body>
</html>
